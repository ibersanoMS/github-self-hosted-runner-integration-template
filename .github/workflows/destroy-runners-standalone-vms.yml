name: Destroy VM runner(s)
on:
    workflow_dispatch:

permissions:
    id-token: write
    contents: read

env:
    TerraformWorkingDirectory: 'src/infra/terraform/runners'
    StateStoreContainerName: 'tfstate'
    StateStoreFilename: 'runners.tfstate'
jobs:
    destroy-runners:
        runs-on: 'ubuntu-latest'
        if: ${{ vars.DESTROYRUNNER == 'true' }}
        steps:
            - uses: actions/checkout@v4
            
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_wrapper: false
            
            - name: Azure login
              uses: azure/login@v1
              with:
                client-id: ${{secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{secrets.AZURE_TENANT_ID }}
            
            - name: Initialize Terraform
              id: init
              working-directory: 'src/infra/terraform/runners/${{ vars.RUNNERTYPE }}'
              run: |
                    terraform init \
                        -backend-config=resource_group_name=${{ vars.STATE_RESOURCE_GROUP_NAME}} \
                        -backend-config=storage_account_name=${{ vars.STORAGE_ACCOUNT_NAME }} \
                        -backend-config=container_name=${{ env.StateStoreContainerName }} \
                        -backend-config=key=${{ env.StateStoreFilename }}
                    echo resourceGroupName=$(terraform output -raw resourceGroupName) >> $GITHUB_OUTPUT
                    echo vmName=$(terraform output -raw vmName) >> $GITHUB_OUTPUT
              env:
                ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}
                ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
                ARM_USE_OIDC: true

            - name: Generate remove token
              if: ${{ vars.RUNNERTYPE == 'vm' }}
              id: token
              run: |
                token=$(curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GH_PAT }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/${{github.repository}}/actions/runners/remove-token)
                
                regToken=$(echo $token | jq '.token' |tr -d \")
                echo registrationToken=$regToken >> $GITHUB_OUTPUT

            - name: Remove runner
              if: ${{ vars.RUNNERTYPE == 'vm' }}
              run: |
                az vm run-command invoke -g ${{ steps.init.outputs.resourceGroupName }} -n ${{ steps.init.outputs.vmName }} --command-id RunShellScript --scripts "cd /actions-runner && export RUNNER_ALLOW_RUNASROOT=\"1\" && ./config.sh remove --token ${{ steps.token.outputs.registrationToken }}"
                
            - name: Apply Terraform
              working-directory: 'src/infra/terraform/runners/${{ vars.RUNNERTYPE }}'
              run: |
                  terraform destroy -auto-approve -var adminPassword=${{ secrets.ADMIN_PWD }} -var githubRepoUrl="https://github.com/${{github.repository}}" -var selfHostedRunnerToken=${{ steps.token.outputs.registrationToken }} -var selfHostedRunnerName=${{ steps.init.outputs.vmName }} -var stateSaContainerName=${{ env.StateStoreContainerName }} -var stateSaName=${{ vars.STORAGE_ACCOUNT_NAME }} -var stateSaRg=${{ vars.STATE_RESOURCE_GROUP_NAME }}
              env:
                ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}
                ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
                ARM_USE_OIDC: true
    destroy-envionment:
        runs-on: 'ubuntu-latest'
        needs: destroy-runners
        if: ${{ vars.DESTROYALL == 'true' }}
        steps:
            - uses: actions/checkout@v4
            
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_wrapper: false
            
            - name: Azure login
              uses: azure/login@v1
              with:
                client-id: ${{secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{secrets.AZURE_TENANT_ID }}
            
            - name: Initialize Terraform
              working-directory: 'src/infra/terraform/runner-infra'
              run: |
                  terraform init \
                      -backend-config=resource_group_name=${{ vars.STATE_RESOURCE_GROUP_NAME}} \
                      -backend-config=storage_account_name=${{ vars.STORAGE_ACCOUNT_NAME }} \
                      -backend-config=container_name=${{ env.StateStoreContainerName }} \
                      -backend-config=key="environment.tfstate"
              env:
               ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
               ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}
               ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
               ARM_USE_OIDC: true
                 
            - name: Apply Terraform
              working-directory: 'src/infra/terraform/runner-infra'
              run: |
                 terraform destroy -auto-approve
              env:
                 ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                 ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}
                 ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
                 ARM_USE_OIDC: true
