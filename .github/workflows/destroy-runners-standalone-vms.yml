name: GitHub Self-hosted runner deployment standalone container apps
        
on:
    workflow_dispatch:

permissions:
    id-token: write
    contents: read

env:
    TerraformWorkingDirectory: 'src/infra/terraform/runners'
    StateStoreContainerName: 'tfstate'
    stateStoreFilename: 'runners.tfstate'
    destroyAll: 'false'
    destroyRunner: 'true'
jobs:
    deploy:
        runs-on: 'ubuntu-latest'
        steps:
            - uses: actions/checkout@v3
            
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                terraform_wrapper: false
            
            - name: Azure login
              uses: azure/login@v1
              with:
                client-id: ${{secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{secrets.AZURE_TENANT_ID }}
            
            - name: Initialize Terraform
              working-directory: ${{ env.TerraformWorkingDirectory }}
              run: |
                  terraform init \
                      -backend-config=resource_group_name=${{ vars.STATE_RESOURCE_GROUP_NAME}} \
                      -backend-config=storage_account_name=${{ vars.STORAGE_ACCOUNT_NAME }} \
                      -backend-config=container_name=${{ env.StateStoreContainerName }} \
                      -backend-config=key=${{ env.StateStoreFilename }}
              env:
               ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
               ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}
               ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
               ARM_USE_OIDC: true
                 
            - name: Apply Terraform
              working-directory: ${{ env.TerraformWorkingDirectory }}
              if: ${{ env.destroyAll == 'true' }}
              run: |
                 terraform destroy -auto-approve
              env:
                 ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                 ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}
                 ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
                 ARM_USE_OIDC: true

            - name: Apply Terraform
              working-directory: ${{ env.TerraformWorkingDirectory }}
              if: ${{ env.destroyRunner == 'true' }}
              run: |
                  terraform destroy -auto-approve -target=azurerm_linux_virtual_machine.runner -target=azurerm_network_interface.runner_nic -target=azurerm_public_ip.runner_public_ip -target=azurerm_subnet.runner_subnet
              env:
                    ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                    ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}
                    ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
                    ARM_USE_OIDC: true